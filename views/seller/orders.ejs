<!-- views/seller/orders.ejs -->

<h1>주문 목록</h1>

<table>
  <thead>
    <tr>
      <th>주문번호</th>
      <th>주문금액</th>
      <th>희망 수령일</th>
      <th>주문서</th>
      <th>주문상태</th>
    </tr>
  </thead>
  <tbody>
    <% orders.forEach((order) => { %>
    <tr>
      <td><%= order.orderNumber %></td>
      <td><%= order.orderAmount %></td>
      <td><%= order.desiredDeliveryDate %></td>
      <td>
        <button class="view-btn" data-order-id="<%= order.id %>">보기</button>
      </td>
      <td>
        <form class="status-form" action="/seller/orders/<%= order.id %>" method="POST">
          <select name="orderStatus">
            <option value="accepted" <% if (order.orderStatus === 'accepted') { %>selected<% } %>>수락</option>
            <option value="rejected" <% if (order.orderStatus === 'rejected') { %>selected<% } %>>거절</option>
            <option value="in_progress" <% if (order.orderStatus === 'in_progress') { %>selected<% } %>>제작 중</option>
            <option value="completed" <% if (order.orderStatus === 'completed') { %>selected<% } %>>제작 완료</option>
          </select>
          <button type="submit">저장</button>
        </form>
      </td>
    </tr>
    <% }); %>
  </tbody>
</table>

<!-- 주문서 팝업창 -->
<div id="order-details-modal" class="modal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <h2>주문서</h2>
    <div id="order-details"></div>
  </div>
</div>

<script>
  // 주문서 보기 버튼 클릭 시 팝업창 열기
  const viewButtons = document.querySelectorAll('.view-btn');
  const orderDetailsModal = document.getElementById('order-details-modal');
  const orderDetails = document.getElementById('order-details');
  const closeModal = document.querySelector('.close');

  viewButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const orderId = button.dataset.orderId;
      // AJAX 요청을 통해 주문서 내용 가져오기
      // API 엔드포인트 및 요청 방법에 맞게 수정해야 합니다.
      fetch(`/seller/orders/${orderId}/details`)
        .then((response) => response.text())
        .then((data) => {
          orderDetails.innerHTML = data;
          orderDetailsModal.style.display = 'block';
        })
        .catch((error) => console.log(error));
    });
  });

  // 팝업창 닫기 버튼 클릭 시 팝업창 닫기
  closeModal.addEventListener('click', () => {
    orderDetailsModal.style.display = 'none';
  });

  // 주문상태 수정 폼 제출 시 AJAX 요청으로 상태 업데이트
  const statusForms = document.querySelectorAll('.status-form');

  statusForms.forEach((form) => {
    form.addEventListener('submit', (event) => {
      event.preventDefault();
      const orderId = form.getAttribute('action').split('/').pop();
      const status = form.elements.orderStatus.value;
      // AJAX 요청을 통해 주문상태 업데이트
      // API 엔드포인트 및 요청 방법에 맞게 수정해야 합니다.
      fetch(`/seller/orders/${orderId}/status`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ status }),
      })
        .then((response) => response.json())
        .then((data) => {
          console.log(data);
          // 상태 업데이트 후 필요한 동작 수행
        })
        .catch((error) => console.log(error));
    });
  });
</script>

<style>
  /* 팝업창 스타일 */
  .modal {
    display: none;
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
  }

  .modal-content {
    background-color: #fefefe;
    margin: 10% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 800px;
  }

  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
  }

  /* 테이블 스타일 */
  table {
    width: 100%;
    border-collapse: collapse;
  }

  th,
  td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
  }

  th {
    background-color: #f2f2f2;
  }

  /* 주문상태 수정 폼 스타일 */
  .status-form {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  /* 드롭다운 메뉴 스타일 */
  select {
    padding: 4px;
    font-size: 14px;
    border-radius: 4px;
  }

  button[type='submit'] {
    margin-left: 8px;
    padding: 4px 8px;
    font-size: 14px;
    border-radius: 4px;
  }
</style>
